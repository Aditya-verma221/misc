// Taking input and sum
#include <stdio.h>

int main() {
  int large,small,sum=0,j, values[j];
  

  printf("Enter size of array: ");
  scanf("%d",&j);

  // taking input and storing it in an array
  for(int i = 0; i < j; ++i) {
     scanf("%d", &values[i]);
  }

  printf("Displaying array: ");

  // printing elements of an array
  for(int i = 0; i < j; ++i) {
     printf("%d\n", values[i]);
  }
  
  
for (int p = 1; p <= j ; ++p) {
    if (values[0] < values[p]) {
      large = values[p];
    }
  }
  
 for (int q = 0; q < j; q++) {     
        //Compare elements of array with min    
       if(values[q] < values[0])    
           { small = values[q];  }  
    } 
    for(int k = 0; k < j; k++)
         { sum = sum + values[k]; }
         
  
printf("Largest element is %d and smallest is %d sum is %d  ",large,small,sum); 
	      
          
  return 0;
}
*******************************************************

#include<stdio.h>  
int main(){    
int n,i,m=0,flag=0;    
printf("Enter the number to check prime:");    
scanf("%d",&n);    
m=n/2;    
for(i=2;i<=m;i++)    
{    
if(n%i==0)    
{    
printf("Number is not prime");    
flag=1;    
break;    
}    
}    
if(flag==0)    
printf("Number is prime");     
return 0;  
 }  
 ***************************************************
 
 #include <stdio.h>
int main() {
  int r, c,i, j;
  printf("Enter the number of rows: ");
  scanf("%d", &r);
  printf("Enter the number of columns: ");
  scanf("%d", &c);
 int  a[r][c], b[r][c], sum[r][c],
  printf("\nEnter elements of 1st matrix:\n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      printf("Enter element a%d%d: ", i + 1, j + 1);
      scanf("%d", &a[i][j]);
    }

  printf("Enter elements of 2nd matrix:\n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      printf("Enter element b%d%d: ", i + 1, j + 1);
      scanf("%d", &b[i][j]);
    }

  // adding 
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      sum[i][j] = a[i][j] + b[i][j];
    }

  // result
  printf("\nSum of two matrices: \n");
  for (i = 0; i < r; ++i)
    for (j = 0; j < c; ++j) {
      printf("%d   ", sum[i][j]);
      if (j == c - 1) {
        printf("\n\n");
      }
    }

  return 0;
}
**********************************************************************

// minimum of two matrix
#include<stdio.h>
int main()
{
  int m, n,smallest1,smallest2,smallest;
  
  
  // take number of rows and columns
  printf("Enter number of row and column: ");
  scanf("%d %d",&m,&n);

  // declare array by given number of rows and columns
  int arr1[m][n],arr2[m][n], i, j;

  // take array elements as input
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      printf("Enter arr[%d][%d]: ",i,j);
      scanf("%d", &arr1[i][j]);
    }
    printf("\n");
  }

  //2nd array
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      printf("Enter arr[%d][%d]: ",i,j);
      scanf("%d", &arr2[i][j]);
    }
    printf("\n");
  }

  smallest1=arr1[0][0];
  smallest2=arr2[0][0];

  // compare with all elements array 1
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {

      if(smallest1>arr1[i][j])
      {
        smallest1=arr1[i][j];
       
    }
  }
  // compare with all elements array 2
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {

      if(smallest2>arr2[i][j])
      {
        smallest2=arr2[i][j];
       
    }
  }
  smallest=smallest1<smallest2?smallest1:smallest2;


  // display results
  printf("\n"); 
  printf("Smallest element in array is %d \n",smallest);


  return 0;
}

***********************************************************
// matrix multiplication

#include<<stdio.h> 
int main()
{ 
int r,c,i,j,k; 
system("cls"); 
printf("enter the number of row=");
scanf("%d",&r);
 printf("Enter the number of column="); 
scanf("%d",&c);
int a[i][j],b[i][j],mul[i][j]; 
printf("Enter matrix a elements=\n");
for(i=0;i<r;i++) 
{ 
for(j=0;j<c;j++)
 { 
scanf("%d",&a[i][j]);
 } 
} 
printf("Enter matrix b elements=\n"); 
for(i=0;i<r;i++)
 { 
for(j=0;j<c;j++) 
{ 
scanf("%d",&b[i][j]);
 } 
} 
printf("Multiplication= \n");
 for(i=0;i<r;i++) 
{ 
for(j=0;j<c;j++)
 {
mul[i][j]=0; 
for(k=0;k<c;k++) 
{ 
mul[i][j]+=a[i][k]*b[k][j]; 
} 
 
}  
for(i=0;i<r;i++)
 {
 for(j=0;j<c;j++) 
{ 
printf("%d\t",mul[i][j]); 
} 
printf("\n");
} 
}

